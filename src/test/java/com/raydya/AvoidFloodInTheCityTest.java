package com.raydya;

import org.junit.Assert;
import org.junit.Test;

public class AvoidFloodInTheCityTest {

    @Test
    public void test1() {
        final AvoidFloodInTheCity solution = new AvoidFloodInTheCity();
        final int[] output = solution.avoidFlood(new int[]{1, 2, 3, 4});

        Assert.assertArrayEquals(new int[]{-1, -1, -1, -1}, output);
    }

    @Test
    public void test2() {
        final AvoidFloodInTheCity solution = new AvoidFloodInTheCity();
        final int[] output = solution.avoidFlood(new int[]{1, 2, 0, 0, 2, 1});

        Assert.assertArrayEquals(new int[]{-1, -1, 2, 1, -1, -1}, output);
    }

    @Test
    public void test3() {
        final AvoidFloodInTheCity solution = new AvoidFloodInTheCity();
        final int[] output = solution.avoidFlood(new int[]{1, 2, 0, 1, 2});

        Assert.assertArrayEquals(new int[]{}, output);
    }

    @Test
    public void test4() {
        final AvoidFloodInTheCity solution = new AvoidFloodInTheCity();
        final int[] output = solution.avoidFlood(
            new int[]{0, 11475, 23148, 0, 91836, 0, 0, 0, 0, 18987, 0, 3057, 0, 0, 0, 69217, 0, 0, 65289, 0, 0, 0,
                35467, 33617, 0, 0, 0, 0, 55602, 67935, 0, 0, 2530, 84750, 0, 0, 4411, 0, 0, 81775, 0, 46174, 33617, 0,
                60322, 60801, 56836, 72787, 4022, 91465, 21256, 0, 0, 0, 0, 0, 2530, 0, 14817, 57045, 0, 0, 0, 2583,
                62414, 4452, 28481, 54082, 36928, 25662, 14817, 95392, 22974, 1040, 0, 93616, 0, 0, 59731, 0, 61094, 0,
                65368, 82028, 22053, 54082, 0, 0, 4452, 81775, 98696, 0, 0, 5717, 91465, 0, 0, 20971, 0, 0, 0, 0, 0, 0,
                0, 8644, 82028, 55602, 0, 77965, 0, 59578, 0, 0, 0, 42529, 0, 0, 0, 0, 0, 36928, 0, 20971, 25671, 0, 0,
                0, 59289, 0, 0, 0, 0, 0, 0, 59289, 72266, 0, 0, 0, 92138, 77364, 59578, 46174, 0, 2583, 60322, 0, 0, 0,
                0, 0, 0, 72787, 4022, 0, 95082, 0, 0, 0, 0, 22974, 22053, 60801, 0, 67634, 27785, 0, 91836, 95392, 0,
                77364, 28481, 4411, 0, 91988, 0, 0, 0, 27785, 69763, 0, 77965, 7509, 67935, 0, 62414, 18987, 84750, 0,
                0, 9118, 0, 9118, 64611, 0, 0, 59731, 0, 0, 69217, 0, 65368, 0, 0, 90771, 0, 0, 56836, 8644, 0, 25662,
                1040, 7509, 90771, 0, 0, 5717, 0, 0, 0, 93616, 0, 0, 92138, 91988, 0, 0, 61094, 57045, 0, 0, 0, 95082,
                0, 23148, 0, 98696, 25671, 11475, 0, 35467, 21256, 65289, 68210, 69763, 0, 0, 72266, 3057, 67634, 64611,
                42529, 68210});

        Assert.assertArrayEquals(
            new int[]{1, -1, -1, 23148, -1, 91836, 11475, 1, 1, -1, 18987, -1, 3057, 1, 1, -1, 69217, 1, -1, 65289, 1,
                1, -1, -1, 33617, 35467, 1, 1, -1, -1, 55602, 67935, -1, -1, 2530, 84750, -1, 4411, 1, -1, 81775, -1,
                -1, 46174, -1, -1, -1, -1, -1, -1, -1, 91465, 60322, 72787, 4022, 60801, -1, 56836, -1, -1, 14817,
                57045, 21256, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54082, -1, 4452, 36928, -1, 2583, -1, 22974,
                -1, -1, -1, -1, 82028, 22053, -1, -1, -1, 95392, 28481, -1, -1, 62414, 59731, -1, 20971, 65368, 25662,
                1040, 5717, 93616, 61094, -1, -1, -1, 8644, -1, 77965, -1, 59578, 98696, 1, -1, 42529, 1, 1, 1, 1, -1,
                1, -1, -1, 25671, 1, 1, -1, 59289, 1, 1, 1, 1, 1, -1, -1, 72266, 1, 1, -1, -1, -1, -1, 77364, -1, -1,
                92138, 1, 1, 1, 1, 1, -1, -1, 1, -1, 95082, 1, 1, 1, -1, -1, -1, 1, -1, -1, 27785, -1, -1, 67634, -1,
                -1, -1, 1, -1, 91988, 1, 1, -1, -1, 69763, -1, -1, -1, 7509, -1, -1, -1, 1, 1, -1, 9118, -1, -1, 64611,
                1, -1, 1, 1, -1, 1, -1, 1, 1, -1, 90771, 1, -1, -1, 1, -1, -1, -1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1,
                -1, 1, 1, -1, -1, 1, 1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 68210, 1, -1, -1, -1, -1,
                -1, -1}, output);
    }
}
